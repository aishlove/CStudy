
  < Generic > 이란?

  일반화를 통해, 
  여러가지 형식을 함수나 클래스에 사용하기 쉽게 만들어 준다.

  - 가장 쉬운 방식은 모든 형식(int float string...)의 버전을 하나씩 하나씩 다 만들어주는 것. 허나 비효율적.
  
  
  - 모든 타입을 소화할 수 있는 Object타입을 사용한다. Var 와 Object의 차이를 기억할 것. (Object는 그 자체가 오브젝트라는 형식. Var는 형식을 뒤에 따라오는 걸 통해서 컴파일러가 유추해주는 것.)
    string, int 같은 애들이 모두 Object를 상속해서 만드는 것이기 때문에 (씨샵에서는)
    모든 타입을 소화할 수 있다.
    그러나 Object타입은 참조형식이고 int, float같은 기본형식 애들은 값형식이기 때문에, stack에 넣고 간단히 사용할 수 있는 복사 타입의 변수들이라,
    모두 Object타입을 사용한다면 매우 성능이 떨어질 것이다. (힙에다가 메모리를 할당해서 거기다가 굳이 숫자를 넣은다음에 힙에 있는 숫자를 다시 뺴와서 스택에 저장하는 매우 복잡한 연산을 사용한다.)
    
    >> 넣고 꺼내오는 작업이 조금 무거운 작업이다. (boxing / unboxing)


  - 이럴 때 사용하는 것이 < Generic > 일반화 형식 이다.


