#include <stdio.h>

// 37.0   2차원 배열

/*  2차원 배열은 [][] 대괄호를 두번 사용하여 선언하며,

	첫 번째 대괄호에는 세로 크기,
	두 번째 대괄호에는 가로 크기
	
	를 지정하빈다.
	
	일반적으론 2차원 공간은 [가로] x [세로]로 표기하지만,
	배열로 만들 때는 [세로] x [가로]로 표기합니다.
	
	- 자료형 배열 이름 [세로크기][가로크기];
	- 자료형 배열 이름 [세로크기][가로크기] = { {값, 값, 값} , {값, 값, 값} };

	*/
int main()
{
	int numArr[3][4] = {
		{ 1, 2, 3, 4 },
		{ 5, 6, 7, 8 },
		{ 9, 10, 11, 12 }
	};


	/* 
	   {} 를 사용하여 배열에 값을 할당하는 방법은 배열을 선언할 때만 사용할 수 있으며
	   이미 선언된 배열에는 사용할 수 없습니다.
	   
	   2차원 배열의 요소에 접근하려면 배열 뒤에 [] 대괄호를 두번 사용하며,
	   [] 안에 세로와 가로 인덱스를 지정해주면 됩니다.
	  
	  - 배열 [세로인덱스][가로인덱스]

	 */

	int num1 = numArr[1][2];
	// 2차원 배열에서, 세로 인덱스 1/ 가로 인덱스 2인 요소에 접근.

	numArr[0][0] = 99;

	printf("%d\n", sizeof(numArr));	// 48: int 2차원 배열의 전체 크기. 4 * 12

	int col = sizeof(numArr[0]) / sizeof(int);
	// 4: 2차원 배열의 가로 크기를 구할 때는 
	//    [가로 한줄의 크기]를 [요소의 크기]로 나눠줌.

	int row = sizeof(numArr) / sizeof(numArr[0]);
	// 3: 2차원 배열의 세로 크기를 구할 때는
	//    배열이 차지하는 [전체 공간]을 [가로 한 줄]의 크기로 나눠줌.

	printf("%d\n", col);	//4
	printf("%d\n", row);	//3

	printf("%d\n", sizeof(numArr));

	printf("%d\n", numArr[0][0]);	// 1: 세로 인덱스0, 가로 인덱스0 인 요소 출력.
	printf("%d\n", numArr[1][2]);	// 7: 세로 인덱스1, 가로 인덱스2 인 요소 출력.
	printf("%d\n", numArr[2][0]);	// 9: 세로 인덱스2, 가로 인덱스0 인 요소 출력.
	printf("%d\n", numArr[2][3]);	// 12: 세로 인덱스2, 가로 인덱스3 인 요소 출력.

	return 0;
}
